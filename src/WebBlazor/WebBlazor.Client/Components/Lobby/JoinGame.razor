@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<LobbyState> LobbyState;

<PageTitle>Scrummy - Join Game</PageTitle>

@if (LobbyState.Value.GameExists)
{
    <div class="grid place-items-center h-screen">
        <div class="bg-white rounded-lg shadow-xl px-4 py-5 flex flex-col items-center gap-3">
            <h1 class="text-xl leading-6 font-medium text-gray-900">Welcome to Scrummy</h1>
            <label for="nickname" class="text-gray-500">To join the game, choose a nickname.</label>
            <Input Id="nickname" Name="nickname" @bind-Value="Nickname" MaxLength="50" Block="true" Placeholder="Enter your nickname" />
            <Button OnClick="Continue" Icon="dice" Block="true" Disabled="@LobbyState.Value.JoiningGame" Loading="@LobbyState.Value.JoiningGame">Join Game</Button>
        </div>
    </div>
}
else
{
    <CenteredText>Finding game...</CenteredText>
}

@code {
    private string Nickname = string.Empty;

    [Parameter]
    public string GameId { get; set; } = null!;

    protected override Task OnInitializedAsync()
    {
        Nickname = LobbyState.Value.Nickname;

        Dispatcher.Dispatch(new EnsureGameExistsAction(GameId));

        return base.OnInitializedAsync();
    }

    private void Continue()
    {
        if (string.IsNullOrWhiteSpace(Nickname))
        {
            return;
        }

        Dispatcher.Dispatch(new JoinGameAction(GameId, Nickname));
    }
}
