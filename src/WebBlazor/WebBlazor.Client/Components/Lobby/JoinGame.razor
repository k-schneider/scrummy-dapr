@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<LobbyState> LobbyState;

<PageTitle>Scrummy - Join Game</PageTitle>

<div class="grid place-items-center h-screen">
    <div class="bg-white rounded-lg shadow-xl sm:max-w-lg mx-4">
        <div class="px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
            <div class="mt-3 text-center">
                <h1 class="text-xl leading-6 font-medium text-gray-900">
                    Welcome to Scrummy
                </h1>
                <div class="mt-3">
                    <p class="text-gray-500">
                        To enter the game, choose a nickname.
                    </p>
                </div>
                <div class="mt-3">
                    <Input Id="nickname" Name="nickname" @bind-Value="nickname" MaxLength="50" Block="true" Placeholder="Enter your nickname" />
                </div>
            </div>
        </div>
        <div class="px-4 py-3 sm:px-6">
            <Button OnClick="Continue" Icon="dice" Block="true" Disabled="@LobbyState.Value.JoiningGame" Loading="@LobbyState.Value.JoiningGame">Join Game</Button>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string GameId { get; set; } = null!;

    private string nickname = string.Empty;

    protected override Task OnInitializedAsync()
    {
        nickname = LobbyState.Value.Nickname;
        return base.OnInitializedAsync();
    }

    private void Continue()
    {
        if (string.IsNullOrWhiteSpace(nickname))
        {
            return;
        }

        Dispatcher.Dispatch(new JoinGameAction(GameId, nickname));
    }
}
