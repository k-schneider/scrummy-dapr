@inherits FluxorComponent
@inject IState<GameState> GameState
@inject IJSRuntime JSRuntime


<div class="flex flex-col gap-8 sm:gap-16 items-center">
    <div class="grid grid-cols-4 md:grid-cols-2 lg:grid-cols-4 gap-4">
        <ResultsStatistic Label="Min" Value="3" />
        <ResultsStatistic Label="Max" Value="13" />
        <ResultsStatistic Label="Average" Value="6.5" />
        <ResultsStatistic Label="Popular" Value="5" />
    </div>
    <div class="w-full px-16 sm:p-0 lg:w-96 md:w-80 sm:w-72 overflow-hidden">
        <canvas id="@WrapperElementId"></canvas>
    </div>
</div>

@code {
    private string WrapperElementId = Guid.NewGuid().ToString();

    protected override Task OnInitializedAsync()
    {
        // todo: Generate stats

        return base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var votes = GameState.Value.Votes.Select(v => v.Value)
                .GroupBy(v => v)
                .Select(g => new { Value = g.Key!, Count = g.Count() })
                .ToDictionary(x => x.Value, x => x.Count);

            await JSRuntime.InvokeVoidAsync(
                "scrummyJS.drawChart",
                WrapperElementId,
                votes);
        }
    }
}
