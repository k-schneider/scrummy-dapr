@inherits FluxorComponent
@inject IDispatcher Dispatcher
@inject IState<GameState> GameState

<div class="relative">
    <Button OnClick="OpenPopover" Icon="face-smile-beam" Variant="light">Kevin</Button>

    @if (GameState.Value.PlayerPopoverOpen)
    {
        <Backdrop OnClick="ClosePopover" Blur="true" />

        <div class="absolute right-0 mt-2 w-96 bg-white rounded-md shadow-xl z-20 flex flex-col">
            <div class="flex flex-col space-y-2 p-4">
                <label class="w-full text-center text-lg font-semibold">Nickname</label>
                <input type="text" class="text-xl bg-gray-50 border border-gray-300 text-gray-900 rounded-lg focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 block w-full p-2.5" />
                <Button Block="true">Update Your Nickname</Button>
            </div>
            <div class="bg-stone-200 p-4">
                <p class="w-full text-center text-lg font-semibold">Player Settings</p>
                <p class="w-full text-center mt-2">todo: Toggle for specator mode</p>
            </div>
            <div class="p-4">
                <Button OnClick="LeaveGame" Icon="arrow-right-from-bracket" Block="true">Leave Game</Button>
            </div>
        </div>
    }
</div>

@code {
    private void ClosePopover()
    {
        Dispatcher.Dispatch(new ClosePlayerPopoverAction());
    }

    private void LeaveGame()
    {
        Dispatcher.Dispatch(new LeaveGameAction());
    }

    private void OpenPopover()
    {
        Dispatcher.Dispatch(new OpenPlayerPopoverAction());
    }
}
